{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "maxLength": 25
        },
        "storageName": {
            "type": "string",
            "maxLength": 25
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "NoOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 10
        }
    },
    "variables": {
        "virtualNetworkName": "VNET",
        "addressPrefix": "192.168.0.0/16",
        "subnet1Prefix": "192.168.1.0/24",
        "subnet2Prefix": "192.168.2.0/24",
        "subnetName1": "subnet-1",
        "subnetname2": "subnet-2",
        "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),variables('subnetname2'))]",
        "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'),variables('subnetName1'))]"
    },
    "resources": [
        {
            "name": "[toLower(concat(parameters('storageName'),uniqueString(resourceGroup().id)))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "allowBlobPublicAccess": true
            }
        },
        {
            "name": "[concat('pip',copyIndex(1))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "pip-copy",
                "count": "[parameters('NoOfInstances')]"
            }
        }, 
        {
            "name": "NSG",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-HTTPs",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        }, 
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups','NSG')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName1')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups','NSG')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnetname2')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet2Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups','NSG')]"
                            }
                        }
                    }
                ]
            }
        }, 
        { 
            "name": "ASET",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2023-03-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 3,
                "platformUpdateDomainCount": 10
            }
        },
        { 
            "name": "[concat('NIC',copyIndex(1))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip',copyIndex(1)))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "copy": {
                "name": "NICcopy",
                "count": "[parameters('NoOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip',copyIndex(1)))]"
                            },
                            "subnet": {
                                "id": "[if(equals(mod(copyIndex(), 2), 0), variables('subnet1Ref'), variables('subnet2Ref'))]"
                            } 
                        }
                    }
                ] 
            }
        },
        {
            "name": "[concat(parameters('vmName'),copyIndex(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', toLower(concat(parameters('storageName'),uniqueString(resourceGroup().id))))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat('NIC',copyIndex(1)))]"
            ],
            "copy": {
                "name": "VMcopy",
                "count": "[parameters('NoOfInstances')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets','ASET')]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    }, 
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    } 
                }, 
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('NIC',copyIndex(1)))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts',toLower(concat(parameters('storageName'),uniqueString(resourceGroup().id))))).primaryEndpoints.Blob]"
                    }
                } 
            } 
        }
    ]
}
